/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type PlayerLeft = {
  game: Address;
  player: Address;
  refundAmount: bigint;
  remainingPlayers: number;
  timestamp: bigint;
};

export type PlayerLeftArgs = {
  game: Address;
  player: Address;
  refundAmount: number | bigint;
  remainingPlayers: number;
  timestamp: number | bigint;
};

export function getPlayerLeftEncoder(): FixedSizeEncoder<PlayerLeftArgs> {
  return getStructEncoder([
    ['game', getAddressEncoder()],
    ['player', getAddressEncoder()],
    ['refundAmount', getU64Encoder()],
    ['remainingPlayers', getU8Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getPlayerLeftDecoder(): FixedSizeDecoder<PlayerLeft> {
  return getStructDecoder([
    ['game', getAddressDecoder()],
    ['player', getAddressDecoder()],
    ['refundAmount', getU64Decoder()],
    ['remainingPlayers', getU8Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getPlayerLeftCodec(): FixedSizeCodec<
  PlayerLeftArgs,
  PlayerLeft
> {
  return combineCodec(getPlayerLeftEncoder(), getPlayerLeftDecoder());
}
