/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';
import {
  getGameEndReasonDecoder,
  getGameEndReasonEncoder,
  type GameEndReason,
  type GameEndReasonArgs,
} from '.';

export type GameEndConditionMet = {
  gameId: bigint;
  reason: GameEndReason;
  timestamp: bigint;
};

export type GameEndConditionMetArgs = {
  gameId: number | bigint;
  reason: GameEndReasonArgs;
  timestamp: number | bigint;
};

export function getGameEndConditionMetEncoder(): FixedSizeEncoder<GameEndConditionMetArgs> {
  return getStructEncoder([
    ['gameId', getU64Encoder()],
    ['reason', getGameEndReasonEncoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getGameEndConditionMetDecoder(): FixedSizeDecoder<GameEndConditionMet> {
  return getStructDecoder([
    ['gameId', getU64Decoder()],
    ['reason', getGameEndReasonDecoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getGameEndConditionMetCodec(): FixedSizeCodec<
  GameEndConditionMetArgs,
  GameEndConditionMet
> {
  return combineCodec(
    getGameEndConditionMetEncoder(),
    getGameEndConditionMetDecoder()
  );
}
