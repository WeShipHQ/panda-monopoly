/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getGameEndReasonDecoder,
  getGameEndReasonEncoder,
  type GameEndReason,
  type GameEndReasonArgs,
} from '.';

export type GameEnded = {
  game: Address;
  winner: Option<Address>;
  reason: GameEndReason;
  winnerNetWorth: Option<bigint>;
  endedAt: bigint;
};

export type GameEndedArgs = {
  game: Address;
  winner: OptionOrNullable<Address>;
  reason: GameEndReasonArgs;
  winnerNetWorth: OptionOrNullable<number | bigint>;
  endedAt: number | bigint;
};

export function getGameEndedEncoder(): Encoder<GameEndedArgs> {
  return getStructEncoder([
    ['game', getAddressEncoder()],
    ['winner', getOptionEncoder(getAddressEncoder())],
    ['reason', getGameEndReasonEncoder()],
    ['winnerNetWorth', getOptionEncoder(getU64Encoder())],
    ['endedAt', getI64Encoder()],
  ]);
}

export function getGameEndedDecoder(): Decoder<GameEnded> {
  return getStructDecoder([
    ['game', getAddressDecoder()],
    ['winner', getOptionDecoder(getAddressDecoder())],
    ['reason', getGameEndReasonDecoder()],
    ['winnerNetWorth', getOptionDecoder(getU64Decoder())],
    ['endedAt', getI64Decoder()],
  ]);
}

export function getGameEndedCodec(): Codec<GameEndedArgs, GameEnded> {
  return combineCodec(getGameEndedEncoder(), getGameEndedDecoder());
}
