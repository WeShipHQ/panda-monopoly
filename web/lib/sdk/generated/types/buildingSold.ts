/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type BuildingSold = {
  game: Address;
  player: Address;
  propertyPosition: number;
  buildingType: string;
  salePrice: bigint;
  timestamp: bigint;
};

export type BuildingSoldArgs = {
  game: Address;
  player: Address;
  propertyPosition: number;
  buildingType: string;
  salePrice: number | bigint;
  timestamp: number | bigint;
};

export function getBuildingSoldEncoder(): Encoder<BuildingSoldArgs> {
  return getStructEncoder([
    ['game', getAddressEncoder()],
    ['player', getAddressEncoder()],
    ['propertyPosition', getU8Encoder()],
    ['buildingType', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['salePrice', getU64Encoder()],
    ['timestamp', getI64Encoder()],
  ]);
}

export function getBuildingSoldDecoder(): Decoder<BuildingSold> {
  return getStructDecoder([
    ['game', getAddressDecoder()],
    ['player', getAddressDecoder()],
    ['propertyPosition', getU8Decoder()],
    ['buildingType', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['salePrice', getU64Decoder()],
    ['timestamp', getI64Decoder()],
  ]);
}

export function getBuildingSoldCodec(): Codec<BuildingSoldArgs, BuildingSold> {
  return combineCodec(getBuildingSoldEncoder(), getBuildingSoldDecoder());
}
